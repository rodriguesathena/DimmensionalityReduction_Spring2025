height = 0.2) +
labs(
title = "Political Issue Space: Factor 1 vs Factor 2",
x = "Polarized, Party-Aligned Issues (Factor 1)",
y = "Individual-Driven Issues (Factor 2)",
fill = "Party Type") +
scale_fill_manual(values = party_colors) +
theme_minimal(base_size = 13) +
theme(legend.position = "bottom")
party_colors <- c(
"Strong Democrat" = "#2166ac",
"Not Strong Democrat" = "#67a9cf",
"Lean Democrat" = "#d1e5f0",
"Pure Independent" = "#f7f7f7",
"Lean Republican" = "#fddbc7",
"Not Strong Republican" = "#ef8a62",
"Strong Republican" = "#b2182b")
#Factor 1
ggplot(party_and_efa, aes(x = type, y = PA1, fill = type)) +
geom_boxplot() +
labs(
title = "Partisan Policy Alignment (Factor 1)",
y = "Polarized Issues",
x = NULL) +
scale_fill_manual(values = party_colors) +
theme_minimal(base_size = 13) +
theme(
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
legend.position = "bottom")
#Factor 2
ggplot(party_and_efa, aes(x = type, y = PA2, fill = type)) +
geom_boxplot() +
labs(
title = "Issue-Based Variation (Factor 2)",
y = "Individual-Driven Issues",
x = NULL) +
scale_fill_manual(values = party_colors) +
theme_minimal(base_size = 13) +
theme(
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
legend.position = "bottom")
#Individual positions 1 vs. 2
ggplot(party_and_efa, aes(x = PA1, y = PA2)) +
geom_jitter(aes(fill = type, color = ifelse(type == "Pure Independent", "white", "black")),
shape = 21,
stroke = 0.4,
alpha = 0.7,
width = 0.2,
height = 0.2) +
labs(
title = "Political Issue Space: Factor 1 vs Factor 2",
x = "Polarized, Party-Aligned Issues (Factor 1)",
y = "Individual-Driven Issues (Factor 2)",
fill = "Party Type") +
scale_fill_manual(values = party_colors) +
theme_minimal(base_size = 13) +
theme(legend.position = "bottom")
#Individual positions 1 vs. 2
ggplot(party_and_efa, aes(x = PA1, y = PA2)) +
geom_jitter(aes(fill = type),
shape = 21,
color = "black",   # Default black outline for all points
stroke = 0.4,
alpha = 0.7,
width = 0.2,
height = 0.2) +
scale_fill_manual(values = party_colors) +
scale_color_manual(values = c("Pure Independent" = "lightgrey")) + # Change outline for Pure Independent
labs(
title = "Political Issue Space: Factor 1 vs Factor 2",
x = "Polarized, Party-Aligned Issues (Factor 1)",
y = "Individual-Driven Issues (Factor 2)",
fill = "Party Type") +
theme_minimal(base_size = 13) +
theme(legend.position = "bottom",
legend.title = element_blank(),   # Remove legend title for color
legend.text = element_blank())    # Remove legend entries for outline colors
#Individual positions 1 vs. 2
ggplot(party_and_efa, aes(x = PA1, y = PA2)) +
geom_jitter(aes(fill = type, color = ifelse(type == "Pure Independent", "black", NA)),
shape = 21,
stroke = 0.4,
alpha = 0.7,
width = 0.2,
height = 0.2) +
scale_fill_manual(values = party_colors) +
scale_color_identity(na.translate = FALSE) +  # This ensures color is not mapped in the legend
labs(
title = "Political Issue Space: Factor 1 vs Factor 2",
x = "Polarized, Party-Aligned Issues (Factor 1)",
y = "Individual-Driven Issues (Factor 2)",
fill = "Party Type") +
theme_minimal(base_size = 13) +
theme(legend.position = "bottom")
#Individual positions 1 vs. 2
ggplot(party_and_efa, aes(x = PA1, y = PA2)) +
geom_jitter(aes(fill = type),
shape = 21,
color = ifelse(party_and_efa$type == "Pure Independent", "black", NA),  # Black outline for "Pure Independent"
stroke = 0.4,
alpha = 0.7,
width = 0.2,
height = 0.2) +
scale_fill_manual(values = party_colors) +  # Keep party colors for fill
scale_color_identity(na.translate = FALSE) +  # Prevent outline color from appearing in the legend
labs(
title = "Political Issue Space: Factor 1 vs Factor 2",
x = "Polarized, Party-Aligned Issues (Factor 1)",
y = "Individual-Driven Issues (Factor 2)",
fill = "Party Type") +
theme_minimal(base_size = 13) +
theme(legend.position = "bottom")
ggplot(party_and_efa, aes(x = PA1, y = PA2)) +
geom_jitter(aes(fill = type),
shape = 21,
color = "black",
stroke = 0.4,
alpha = 0.7,
width = 0.2,
height = 0.2) +
labs(
title = "Political Issue Space: Factor 1 vs Factor 2",
x = "Polarized, Party-Aligned Issues (Factor 1)",
y = "Individual-Driven Issues (Factor 2)",
fill = "Party Type") +
scale_fill_manual(values = party_colors) +
theme_minimal(base_size = 13) +
theme(legend.position = "bottom")
#Individual positions 1 vs. 2
ggplot(party_and_efa, aes(x = PA1, y = PA2)) +
geom_jitter(aes(fill = type),
shape = 21,
color = "black",
stroke = 0.4,
alpha = 0.7,
width = 0.2,
height = 0.2) +
labs(
title = "Political Issue Space: Factor 1 vs Factor 2",
x = "Polarized, Party-Aligned Issues (Factor 1)",
y = "Individual-Driven Issues (Factor 2)",
fill = "Party Type") +
scale_fill_manual(values = party_colors) +
theme_minimal(base_size = 13) +
theme(legend.position = "bottom")
#Individual positions 1 vs. 2
ggplot(party_and_efa, aes(x = PA1, y = PA2)) +
geom_jitter(aes(fill = type),
shape = 21,
color = ifelse(party_and_efa$type == "Pure Independent", "black", NA),  # Black outline for "Pure Independent"
stroke = 0.4,
alpha = 0.7,
width = 0.2,
height = 0.2) +
scale_fill_manual(values = party_colors) +  # Keep party colors for fill
scale_color_identity(na.translate = FALSE) +  # Prevent outline color from appearing in the legend
labs(
title = "Political Issue Space: Factor 1 vs Factor 2",
x = "Polarized, Party-Aligned Issues (Factor 1)",
y = "Individual-Driven Issues (Factor 2)",
fill = "Party Type") +
theme_minimal(base_size = 13) +
theme(
legend.position = "bottom",
legend.key.size = unit(0.8, "lines"),  # Resize the legend keys
legend.text = element_text(size = 10), # Reduce legend text size
legend.spacing.x = unit(0.5, "cm"),   # Adjust horizontal spacing between legend items
legend.margin = margin(t = 0, b = 0)  # Remove margins that might be causing clipping
)
#Individual positions 1 vs. 2
ggplot(party_and_efa, aes(x = PA1, y = PA2)) +
geom_jitter(aes(fill = type),
shape = 21,
color = "black",
stroke = 0.4,
alpha = 0.7,
width = 0.2,
height = 0.2) +
labs(
title = "Political Issue Space: Factor 1 vs Factor 2",
x = "Polarized, Party-Aligned Issues (Factor 1)",
y = "Individual-Driven Issues (Factor 2)",
fill = "Party Type") +
scale_fill_manual(values = party_colors) +
theme_minimal(base_size = 13) +
theme(  theme(
legend.position = "bottom",
legend.key.size = unit(0.8, "lines"),  # Resize the legend keys
legend.text = element_text(size = 10), # Reduce legend text size
legend.spacing.x = unit(0.5, "cm"),   # Adjust horizontal spacing between legend items
legend.margin = margin(t = 0, b = 0)  # Remove margins that might be causing clipping
))
#Individual positions 1 vs. 2
ggplot(party_and_efa, aes(x = PA1, y = PA2)) +
geom_jitter(aes(fill = type),
shape = 21,
color = "black",
stroke = 0.4,
alpha = 0.7,
width = 0.2,
height = 0.2) +
labs(
title = "Political Issue Space: Factor 1 vs Factor 2",
x = "Polarized, Party-Aligned Issues (Factor 1)",
y = "Individual-Driven Issues (Factor 2)",
fill = "Party Type") +
scale_fill_manual(values = party_colors) +
theme_minimal(base_size = 13) +
theme(  theme(
legend.position = "bottom",
legend.key.size = unit(0.8, "lines"),
legend.text = element_text(size = 10),
legend.spacing.x = unit(0.5, "cm"),
legend.margin = margin(t = 0, b = 0)  ))
#Factor 2
ggplot(party_and_efa, aes(x = type, y = PA2, fill = type)) +
geom_boxplot() +
setwd("C:/Users/athen/Documents/GitHub/DimmensionalityReduction_Spring2025/final_report")
library(tidyverse)
library(dplyr)
library(psych)
library(ggplot2)
df <- read_csv("anes_specialstudy_2020-2022_socialmedia_csv_20230705.csv", show_col_types = FALSE)
party_processing <- df %>%
select("caseid",
"pid1d",
"pid1r",
"pidstr",
"pidlean")
party_processing <- party_processing %>%
mutate(pid_raw = case_when(
!is.na(pid1d) & pid1d >= 0 ~ as.numeric(pid1d),
!is.na(pid1r) & pid1r >= 0 ~ as.numeric(pid1r),
TRUE ~ NA_real_),
party = case_when(
pid_raw == 1 ~ "Democrat",
pid_raw == 2 ~ "Republican",
pid_raw == 3 ~ "Independent",
pid_raw == 4 ~ "Other",
TRUE ~ NA_character_),
type = case_when(
party == "Democrat" & pidstr == 1 ~ "Strong Democrat",
party == "Democrat" & pidstr == 2 ~ "Not Strong Democrat",
party == "Republican" & pidstr == 1 ~ "Strong Republican",
party == "Republican" & pidstr == 2 ~ "Not Strong Republican",
party == "Independent" & pidlean == 1 ~ "Lean Republican",
party == "Independent" & pidlean == 2 ~ "Lean Democrat",
party == "Independent" & pidlean == 3 ~ "Pure Independent",
TRUE ~ "No Answer"))
# data %>%
#   count(party)
# data %>%
#   count(type)
parties <- party_processing %>%
select("caseid", "party", "type")
parties <- parties %>%
filter(party %in% c("Democrat", "Republican", "Independent") & type != "No Answer")
efa_variables <- c("hp_you",
"gundiff",
"c_self",
"rr1",
"rr2",
"immpol",
"trustvote")
efa_variables <- df %>%
select(all_of(efa_variables)) %>%
drop_na()
cor_matrix <- cor(efa_variables)
cortest.bartlett(cor_matrix, n = nrow(efa_variables))
scree(cor_matrix, factors = FALSE)
KMO(efa_variables)
results <- fa(efa_variables, nfactors = 2,
rotate = "oblimin",
fm = "pa")
print(results)
efa_scores <- fa(efa_variables, nfactors = 2, rotate = "oblimin", fm = "pa", scores = "regression")$scores
efa_scores <- as.data.frame(efa_scores)
efa_scores$caseid <- df$caseid
party_and_efa <- parties %>%
left_join(efa_scores, by = "caseid")
party_colors <- c(
"Strong Democrat" = "#2166ac",
"Not Strong Democrat" = "#67a9cf",
"Lean Democrat" = "#d1e5f0",
"Pure Independent" = "#f7f7f7",
"Lean Republican" = "#fddbc7",
"Not Strong Republican" = "#ef8a62",
"Strong Republican" = "#b2182b")
#Factor 1
ggplot(party_and_efa, aes(x = type, y = PA1, fill = type)) +
geom_boxplot() +
labs(
title = "Partisan Policy Alignment (Factor 1)",
y = "Polarized Issues",
x = NULL) +
scale_fill_manual(values = party_colors) +
theme_minimal(base_size = 13) +
theme(
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
legend.position = "bottom",
legend.key.size = unit(0.8, "lines"),
legend.text = element_text(size = 10),
legend.spacing.x = unit(0.5, "cm"),
legend.margin = margin(t = 0, b = 0))
#Factor 2
ggplot(party_and_efa, aes(x = type, y = PA2, fill = type)) +
geom_boxplot() +
labs(
title = "Issue-Based Variation (Factor 2)",
y = "Individual-Driven Issues",
x = NULL) +
scale_fill_manual(values = party_colors) +
theme_minimal(base_size = 13) +
theme(
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
legend.position = "bottom",
legend.key.size = unit(0.8, "lines"),
legend.text = element_text(size = 10),
legend.spacing.x = unit(0.5, "cm"),
legend.margin = margin(t = 0, b = 0))
#Individual positions 1 vs. 2
ggplot(party_and_efa, aes(x = PA1, y = PA2)) +
geom_jitter(aes(fill = type),
shape = 21,
color = "black",
stroke = 0.4,
alpha = 0.7,
width = 0.2,
height = 0.2) +
labs(
title = "Political Issue Space: Factor 1 vs Factor 2",
x = "Polarized, Party-Aligned Issues (Factor 1)",
y = "Individual-Driven Issues (Factor 2)",
fill = "Party Type") +
scale_fill_manual(values = party_colors) +
theme_minimal(base_size = 13) +
theme(  theme(
legend.position = "bottom",
legend.key.size = unit(0.8, "lines"),
legend.text = element_text(size = 10),
legend.spacing.x = unit(0.5, "cm"),
legend.margin = margin(t = 0, b = 0)  ))
setwd("C:/Users/athen/Documents/GitHub/DimmensionalityReduction_Spring2025/final_report")
library(tidyverse)
library(dplyr)
library(psych)
library(ggplot2)
df <- read_csv("anes_specialstudy_2020-2022_socialmedia_csv_20230705.csv", show_col_types = FALSE)
setwd("C:/Users/athen/Documents/GitHub/DimmensionalityReduction_Spring2025/final_report")
library(tidyverse)
library(dplyr)
library(psych)
library(ggplot2)
df <- read_csv("dataset_info/anes_specialstudy_2020-2022_socialmedia_csv_20230705.csv", show_col_types = FALSE)
setwd("C:/Users/athen/Documents/GitHub/DimmensionalityReduction_Spring2025/final_report/dataset_info")
library(tidyverse)
library(dplyr)
library(psych)
library(ggplot2)
df <- read_csv("anes_specialstudy_2020-2022_socialmedia_csv_20230705.csv", show_col_types = FALSE)
library(readr)
anes_specialstudy_2020_2022_socialmedia_csv_20230705 <- read_csv("dataset_info/anes_specialstudy_2020-2022_socialmedia_csv_20230705.csv")
View(anes_specialstudy_2020_2022_socialmedia_csv_20230705)
setwd("C:/Users/athen/Documents/GitHub/DimmensionalityReduction_Spring2025/final_report/dataset_info")
library(tidyverse)
library(dplyr)
library(psych)
library(ggplot2)
df <- read_csv("dataset_info/anes_specialstudy_2020-2022_socialmedia_csv_20230705.csv", show_col_types = FALSE)
setwd("C:/Users/athen/Documents/GitHub/DimmensionalityReduction_Spring2025/final_report/dataset_info")
library(tidyverse)
library(dplyr)
library(psych)
library(ggplot2)
df <- read_csv("dataset_info/anes_specialstudy_2020-2022_socialmedia_csv_20230705.csv", show_col_types = FALSE)
setwd("C:/Users/athen/Documents/GitHub/DimmensionalityReduction_Spring2025/final_report/dataset_info")
library(tidyverse)
library(dplyr)
library(psych)
library(ggplot2)
df <- read_csv("dataset_info/anes_specialstudy_2020-2022_socialmedia_csv_20230705.csv", show_col_types = FALSE)
setwd("C:/Users/athen/Documents/GitHub/DimmensionalityReduction_Spring2025/final_report/code_report")
library(tidyverse)
library(dplyr)
library(psych)
library(ggplot2)
df <- read_csv("data.csv", show_col_types = FALSE)
party_processing <- df %>%
select("caseid",
"pid1d",
"pid1r",
"pidstr",
"pidlean")
party_processing <- party_processing %>%
mutate(pid_raw = case_when(
!is.na(pid1d) & pid1d >= 0 ~ as.numeric(pid1d),
!is.na(pid1r) & pid1r >= 0 ~ as.numeric(pid1r),
TRUE ~ NA_real_),
party = case_when(
pid_raw == 1 ~ "Democrat",
pid_raw == 2 ~ "Republican",
pid_raw == 3 ~ "Independent",
pid_raw == 4 ~ "Other",
TRUE ~ NA_character_),
type = case_when(
party == "Democrat" & pidstr == 1 ~ "Strong Democrat",
party == "Democrat" & pidstr == 2 ~ "Not Strong Democrat",
party == "Republican" & pidstr == 1 ~ "Strong Republican",
party == "Republican" & pidstr == 2 ~ "Not Strong Republican",
party == "Independent" & pidlean == 1 ~ "Lean Republican",
party == "Independent" & pidlean == 2 ~ "Lean Democrat",
party == "Independent" & pidlean == 3 ~ "Pure Independent",
TRUE ~ "No Answer"))
# data %>%
#   count(party)
# data %>%
#   count(type)
parties <- party_processing %>%
select("caseid", "party", "type")
parties <- parties %>%
filter(party %in% c("Democrat", "Republican", "Independent") & type != "No Answer")
efa_variables <- c("hp_you",
"gundiff",
"c_self",
"rr1",
"rr2",
"immpol",
"trustvote")
efa_variables <- df %>%
select(all_of(efa_variables)) %>%
drop_na()
cor_matrix <- cor(efa_variables)
cortest.bartlett(cor_matrix, n = nrow(efa_variables))
scree(cor_matrix, factors = FALSE)
KMO(efa_variables)
results <- fa(efa_variables, nfactors = 2,
rotate = "oblimin",
fm = "pa")
print(results)
efa_scores <- fa(efa_variables, nfactors = 2, rotate = "oblimin", fm = "pa", scores = "regression")$scores
efa_scores <- as.data.frame(efa_scores)
efa_scores$caseid <- df$caseid
party_and_efa <- parties %>%
left_join(efa_scores, by = "caseid")
party_colors <- c(
"Strong Democrat" = "#2166ac",
"Not Strong Democrat" = "#67a9cf",
"Lean Democrat" = "#d1e5f0",
"Pure Independent" = "#f7f7f7",
"Lean Republican" = "#fddbc7",
"Not Strong Republican" = "#ef8a62",
"Strong Republican" = "#b2182b")
#Factor 1
ggplot(party_and_efa, aes(x = type, y = PA1, fill = type)) +
geom_boxplot() +
labs(
title = "Partisan Policy Alignment (Factor 1)",
y = "Polarized Issues",
x = NULL) +
scale_fill_manual(values = party_colors) +
theme_minimal(base_size = 13) +
theme(
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
legend.position = "bottom",
legend.key.size = unit(0.8, "lines"),
legend.text = element_text(size = 10),
legend.spacing.x = unit(0.5, "cm"),
legend.margin = margin(t = 0, b = 0))
#Factor 2
ggplot(party_and_efa, aes(x = type, y = PA2, fill = type)) +
geom_boxplot() +
labs(
title = "Issue-Based Variation (Factor 2)",
y = "Individual-Driven Issues",
x = NULL) +
scale_fill_manual(values = party_colors) +
theme_minimal(base_size = 13) +
theme(
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
legend.position = "bottom",
legend.key.size = unit(0.8, "lines"),
legend.text = element_text(size = 10),
legend.spacing.x = unit(0.5, "cm"),
legend.margin = margin(t = 0, b = 0))
#Individual positions 1 vs. 2
ggplot(party_and_efa, aes(x = PA1, y = PA2)) +
geom_jitter(aes(fill = type),
shape = 21,
color = "black",
stroke = 0.4,
alpha = 0.7,
width = 0.2,
height = 0.2) +
labs(
title = "Political Issue Space: Factor 1 vs Factor 2",
x = "Polarized, Party-Aligned Issues (Factor 1)",
y = "Individual-Driven Issues (Factor 2)",
fill = "Party Type") +
scale_fill_manual(values = party_colors) +
theme_minimal(base_size = 13) +
theme(  theme(
legend.position = "bottom",
legend.key.size = unit(0.8, "lines"),
legend.text = element_text(size = 10),
legend.spacing.x = unit(0.5, "cm"),
legend.margin = margin(t = 0, b = 0)  ))
